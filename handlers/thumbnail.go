package handlers

import (
	"log"
	"media-server/config"
	"net/http"
	"path/filepath"
	"strings"

	"github.com/gin-gonic/gin"
)

// GetThumbnail now redirects to the expected public URL of the thumbnail in R2.
func GetThumbnail(c *gin.Context) {
	relPath := strings.TrimPrefix(c.Param("filepath"), "/")
	relPath = filepath.ToSlash(filepath.Clean(relPath))

	if strings.Contains(relPath, "..") {
		c.JSON(http.StatusBadRequest, gin.H{"error": "Invalid path"})
		return
	}

	// Construct the expected key for the thumbnail object in R2
	thumbnailName := strings.TrimSuffix(filepath.Base(relPath), filepath.Ext(relPath)) + ".jpg"
	thumbnailKey := filepath.ToSlash(filepath.Join("thumbnails", filepath.Dir(relPath), thumbnailName))

	// Construct the full public URL
	thumbnailURL := config.CloudflarePublicDevURL + "/" + thumbnailKey

	// Here, we are assuming the thumbnail has already been generated by a background process.
	// In a real-world app, you might check if the object exists in R2 using r2Client.HeadObject
	// before redirecting, but for simplicity, we'll redirect directly.

	log.Printf("Redirecting client to thumbnail at: %s", thumbnailURL)
	c.Redirect(http.StatusTemporaryRedirect, thumbnailURL)
}